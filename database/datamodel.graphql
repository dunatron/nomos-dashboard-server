type User {
  id: ID! @unique
  name: String!
  email: String! @unique
  password: String!
  role: ROLE! @default(value: "ONBOARDER")
  standupDetails: [StandupDetail!]!
    @relation(name: "UserStandupDetails", onDelete: CASCADE)
  jiraLink: String
  phone: String
  address: String
  appliedLeave: [Leave!]! @relation(name: "UserLeaveDetails", onDelete: CASCADE)
}

enum ROLE {
  DESIGNER
  TESTER
  ANALYST
  ONBOARDER
  DEVELOPER
  PROJECT_MANAGER
  WIZARD
}

type StandupDetail {
  id: ID! @unique
  createdAt: DateTime!
  forUser: User @relation(name: "UserStandupDetails")
  notes: String
  timeTaken: Int
}

type Leave {
  id: ID! @unique
  status: LEAVE_STATUS! @default(value: "PENDING")
  forUser: User @relation(name: "UserLeaveDetails")
  createdAt: DateTime!
  lastDayOfWork: DateTime!
  firstDayOfLeave: DateTime!
  lastDayOfLeave: DateTime!
  firstDayOfWork: DateTime!
  daysOfLeave: Int!
  publicHolidays: Int!
  totalLeaveDays: Int!
  type: LEAVE_TYPE! @default(value: "SICK_LEAVE")
  notes: String
}

enum LEAVE_STATUS {
  ACCEPTED
  PENDING
  DENIED
}

enum LEAVE_TYPE {
  ANNUAL_LEAVE
  BEREAVEMENT_LEAVE
  PARENTAL_LEAVE
  PAID_PARENTAL_LEAVE
  SICK_LEAVE
  DOMESTIC_LEAVE
  SPECIAL_LEAVE
  LONG_SERVICE_LEAVE
  JURY_SERVICE
  ACCIDENT_COMPENSATION
  EMPLOYMENT_RELATIONS_EDUCATION
  CIVIL_DEFENCE_EMERGENCY
  MILITARY_SERVICE
}
# https://itnext.io/graphql-interfaces-and-union-types-with-prisma-and-yoga-7224f9e1d9ad
type Question {
  id: ID! @unique
  name: String! @unique
  answers: [Answer!]! @relation(name: "QuestionAnswers", onDelete: CASCADE)
  tags: [Tag!]! @relation(name: "QuestionTags", onDelete: SET_NULL)
  notes: [QuestionNote!]! @relation(name: "QuestionNotes", onDelete: CASCADE)
  links: [QuestionLink!]! @relation(name: "QuestionLinks", onDelete: SET_NULL)
}

type Answer {
  id: ID! @unique
  question: Question @relation(name: "QuestionAnswers")
  response: String!
  notes: [AnswerNote!]! @relation(name: "AnswerNotes", onDelete: CASCADE)
  links: [AnswerLink!]! @relation(name: "AnswerLinks", onDelete: SET_NULL)
}

type Tag {
  id: ID! @unique
  name: String!
  questions: [Question!]! @relation(name: "QuestionTags")
}

type QuestionLink {
  id: ID! @unique
  name: String! @unique
  url: String!
  questions: [Question!]! @relation(name: "QuestionLinks")
}

type QuestionNote {
  id: ID! @unique
  content: String!
  question: Question @relation(name: "QuestionNotes")
}

type AnswerLink {
  id: ID! @unique
  name: String! @unique
  url: String!
  answers: [Answer!]! @relation(name: "AnswerLinks")
}

type AnswerNote {
  id: ID! @unique
  content: String!
  answer: Answer @relation(name: "AnswerNotes")
}
